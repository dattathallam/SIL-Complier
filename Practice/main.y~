%{
	#include<stdio.h>
	#include<string.h>
	#include<stdlib.h>
	void print_operator(char c);
	char input[10000];
	int ind,pos = 0;
%}

%token NUMBER
%left '+' '-'
%left '*' '/' '%'

%% 

start : expr '\n'		{exit(1);}
	;

expr: expr '+' expr     {print_operator('+');}
	| expr '-' expr     {print_operator('-');}
    | expr '*' expr     {print_operator('*');}
    | expr '/' expr     {print_operator('/');}
    | expr '%' expr     {print_operator('%');}
    | '(' expr ')'
    | NUMBER            {printf("NUM%d ",pos);}
    ;

%%

void print_operator(char c){
    switch(c){
        case '+'  : printf("PLUS ");
                    break;
        case '-'  : printf("MINUS ");
                    break;
        case '/'  : printf("DIVISION ");
                    break;
		case '%'  : printf("MODULO ");
                    break;
        case '*'  : printf("MUL ");
                    break;
    }
    return;
}
yylex(){
    char c;
    c = getchar();
    if(isdigit(c)){
        pos++;
        return NUMBER;
    }
    else if(c == ' '){
        yylex();         /*This is to ignore whitespaces in the input*/
    }
    else {
        return c;
    }
}

yyerror(char const *s)
{
    printf("\nyyerror : %s\n",s);
}			
main()
{
	yyparse();
	return 1;
}
